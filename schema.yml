openapi: 3.0.3
info:
  title: ''
  version: 0.0.0
paths:
  /lesson/{id}/:
    get:
      operationId: lesson_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    put:
      operationId: lesson_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    patch:
      operationId: lesson_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLesson'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
    delete:
      operationId: lesson_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /lesson/education-term/:
    get:
      operationId: lesson_education_term_list
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: name
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEducationTermList'
          description: ''
    post:
      operationId: lesson_education_term_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationTerm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EducationTerm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EducationTerm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationTerm'
          description: ''
  /lesson/education-term/{id}/:
    get:
      operationId: lesson_education_term_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationTerm'
          description: ''
    put:
      operationId: lesson_education_term_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EducationTerm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EducationTerm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EducationTerm'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationTerm'
          description: ''
    patch:
      operationId: lesson_education_term_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEducationTerm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEducationTerm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEducationTerm'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EducationTerm'
          description: ''
    delete:
      operationId: lesson_education_term_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /lesson/getAll/:
    get:
      operationId: lesson_getAll_list
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: instructor_email
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonList'
          description: ''
  /lesson/getAllLessonByPage/:
    get:
      operationId: lesson_getAllLessonByPage_list
      parameters:
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: instructor_email
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonList'
          description: ''
  /lesson/program/{id}/:
    get:
      operationId: lesson_program_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonProgram'
          description: ''
    put:
      operationId: lesson_program_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonProgram'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonProgram'
          description: ''
    patch:
      operationId: lesson_program_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedLessonProgram'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedLessonProgram'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedLessonProgram'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonProgram'
          description: ''
    delete:
      operationId: lesson_program_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: No response body
  /lesson/program/addLessonProgramToTeacher/:
    post:
      operationId: lesson_program_addLessonProgramToTeacher_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonProgram'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonProgram'
          description: ''
  /lesson/program/getAll/:
    get:
      operationId: lesson_program_getAll_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: lessons_title
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/getAllLessonProgramByPage/:
    get:
      operationId: lesson_program_getAllLessonProgramByPage_list
      parameters:
      - in: query
        name: active
        schema:
          type: boolean
      - in: query
        name: end_date
        schema:
          type: string
          format: date
      - in: query
        name: lessons_title
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: start_date
        schema:
          type: string
          format: date
      tags:
      - lesson
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/getAllStudent/:
    get:
      operationId: lesson_program_getAllStudent_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/getAllStudentByPage/:
    get:
      operationId: lesson_program_getAllStudentByPage_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/getAllTeacher/:
    get:
      operationId: lesson_program_getAllTeacher_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/getAllTeacherByPage/:
    get:
      operationId: lesson_program_getAllTeacherByPage_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      tags:
      - lesson
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedLessonProgramList'
          description: ''
  /lesson/program/save/:
    post:
      operationId: lesson_program_save_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/LessonProgram'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/LessonProgram'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LessonProgram'
          description: ''
  /lesson/save/:
    post:
      operationId: lesson_save_create
      tags:
      - lesson
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Lesson'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Lesson'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Lesson'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lesson'
          description: ''
  /meet/:
    get:
      operationId: meet_list
      tags:
      - meet
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Meet'
          description: ''
    post:
      operationId: meet_create
      tags:
      - meet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meet'
          description: ''
  /meet/{id}/:
    get:
      operationId: meet_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meet
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meet'
          description: ''
    put:
      operationId: meet_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Meet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Meet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Meet'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meet'
          description: ''
    patch:
      operationId: meet_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meet
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedMeet'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedMeet'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedMeet'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Meet'
          description: ''
    delete:
      operationId: meet_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - meet
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /schema/:
    get:
      operationId: schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - af
          - ar
          - ar-dz
          - ast
          - az
          - be
          - bg
          - bn
          - br
          - bs
          - ca
          - ckb
          - cs
          - cy
          - da
          - de
          - dsb
          - el
          - en
          - en-au
          - en-gb
          - eo
          - es
          - es-ar
          - es-co
          - es-mx
          - es-ni
          - es-ve
          - et
          - eu
          - fa
          - fi
          - fr
          - fy
          - ga
          - gd
          - gl
          - he
          - hi
          - hr
          - hsb
          - hu
          - hy
          - ia
          - id
          - ig
          - io
          - is
          - it
          - ja
          - ka
          - kab
          - kk
          - km
          - kn
          - ko
          - ky
          - lb
          - lt
          - lv
          - mk
          - ml
          - mn
          - mr
          - ms
          - my
          - nb
          - ne
          - nl
          - nn
          - os
          - pa
          - pl
          - pt
          - pt-br
          - ro
          - ru
          - sk
          - sl
          - sq
          - sr
          - sr-latn
          - sv
          - sw
          - ta
          - te
          - tg
          - th
          - tk
          - tr
          - tt
          - udm
          - ug
          - uk
          - ur
          - uz
          - vi
          - zh-hans
          - zh-hant
      tags:
      - schema
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /student-info/{id}/:
    get:
      operationId: student_info_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentInfo'
          description: ''
    put:
      operationId: student_info_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentInfo'
          description: ''
    patch:
      operationId: student_info_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedStudentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedStudentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedStudentInfo'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentInfo'
          description: ''
    delete:
      operationId: student_info_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /student-info/attendance/{id}/:
    get:
      operationId: student_info_attendance_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    put:
      operationId: student_info_attendance_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    patch:
      operationId: student_info_attendance_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAttendance'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
    delete:
      operationId: student_info_attendance_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /student-info/attendance/getAll/:
    get:
      operationId: student_info_attendance_getAll_list
      parameters:
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - absent
          - present
        description: |-
          * `present` - Present
          * `absent` - Absent
      - in: query
        name: student_user_first_name
        schema:
          type: string
      - in: query
        name: student_user_last_name
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
  /student-info/attendance/getAllAttendanceByPage/:
    get:
      operationId: student_info_attendance_getAllAttendanceByPage_list
      parameters:
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
          enum:
          - absent
          - present
        description: |-
          * `present` - Present
          * `absent` - Absent
      - in: query
        name: student_user_first_name
        schema:
          type: string
      - in: query
        name: student_user_last_name
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAttendanceList'
          description: ''
  /student-info/attendance/save/:
    post:
      operationId: student_info_attendance_save_create
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Attendance'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Attendance'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Attendance'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Attendance'
          description: ''
  /student-info/enrollments/:
    get:
      operationId: student_info_enrollments_list
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Enrollment'
          description: ''
    post:
      operationId: student_info_enrollments_create
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
  /student-info/enrollments/{id}/:
    get:
      operationId: student_info_enrollments_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    put:
      operationId: student_info_enrollments_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Enrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Enrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Enrollment'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    patch:
      operationId: student_info_enrollments_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedEnrollment'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Enrollment'
          description: ''
    delete:
      operationId: student_info_enrollments_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /student-info/getAll/:
    get:
      operationId: student_info_getAll_list
      parameters:
      - in: query
        name: grade
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: user__email
        schema:
          type: string
      - in: query
        name: user_email
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentInfoList'
          description: ''
  /student-info/getAllStudentInfoByPage/:
    get:
      operationId: student_info_getAllStudentInfoByPage_list
      parameters:
      - in: query
        name: grade
        schema:
          type: string
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: user__email
        schema:
          type: string
      - in: query
        name: user_email
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedStudentInfoList'
          description: ''
  /student-info/grade/{id}/:
    get:
      operationId: student_info_grade_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    put:
      operationId: student_info_grade_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    patch:
      operationId: student_info_grade_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedGrade'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
    delete:
      operationId: student_info_grade_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - student-info
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /student-info/grade/getAll/:
    get:
      operationId: student_info_grade_getAll_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: score_max
        schema:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      - in: query
        name: score_min
        schema:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      - in: query
        name: student_user_first_name
        schema:
          type: string
      - in: query
        name: student_user_last_name
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
  /student-info/grade/getAllGradeByPage/:
    get:
      operationId: student_info_grade_getAllGradeByPage_list
      parameters:
      - name: page
        required: false
        in: query
        description: A page number within the paginated result set.
        schema:
          type: integer
      - name: page_size
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: score_max
        schema:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      - in: query
        name: score_min
        schema:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      - in: query
        name: student_user_first_name
        schema:
          type: string
      - in: query
        name: student_user_last_name
        schema:
          type: string
      - in: query
        name: subject
        schema:
          type: string
      tags:
      - student-info
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedGradeList'
          description: ''
  /student-info/grade/save/:
    post:
      operationId: student_info_grade_save_create
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Grade'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Grade'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Grade'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Grade'
          description: ''
  /student-info/save/:
    post:
      operationId: student_info_save_create
      tags:
      - student-info
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StudentInfo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/StudentInfo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/StudentInfo'
        required: true
      security:
      - jwtAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StudentInfo'
          description: ''
  /user/{id}/:
    get:
      operationId: user_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: user_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: user_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: user_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '204':
          description: No response body
  /user/all/:
    get:
      operationId: user_all_list
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
  /user/change-password/:
    put:
      operationId: user_change_password_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ChangePassword'
        required: true
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
    patch:
      operationId: user_change_password_partial_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedChangePassword'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChangePassword'
          description: ''
  /user/filter-by-name/:
    get:
      operationId: user_filter_by_name_retrieve
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserFilter'
          description: ''
  /user/login/:
    post:
      operationId: user_login_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /user/profile/:
    get:
      operationId: user_profile_retrieve
      tags:
      - user
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /user/register/:
    post:
      operationId: user_register_create
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /user/update-profile/:
    put:
      operationId: user_update_profile_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
    patch:
      operationId: user_update_profile_partial_update
      tags:
      - user
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUpdateProfile'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UpdateProfile'
          description: ''
components:
  schemas:
    Attendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
      required:
      - date
      - id
      - status
      - student
    ChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
      required:
      - new_password
      - old_password
    EducationTerm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
      required:
      - end_date
      - id
      - name
      - start_date
    Enrollment:
      type: object
      properties:
        student:
          type: integer
        student_id:
          type: integer
          writeOnly: true
        lesson:
          type: integer
        lesson_id:
          type: integer
          writeOnly: true
        date_enrolled:
          type: string
          format: date-time
          readOnly: true
        education_term:
          type: integer
          nullable: true
        education_term_id:
          type: integer
          writeOnly: true
      required:
      - date_enrolled
      - education_term_id
      - lesson
      - lesson_id
      - student
      - student_id
    Grade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        subject:
          type: string
          maxLength: 255
        score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
      required:
      - id
      - score
      - student
      - subject
    Lesson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        instructor:
          type: integer
          nullable: true
        education_term:
          allOf:
          - $ref: '#/components/schemas/EducationTerm'
          readOnly: true
        education_term_id:
          type: integer
          writeOnly: true
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/Enrollment'
          readOnly: true
      required:
      - education_term
      - education_term_id
      - enrollments
      - id
      - title
    LessonProgram:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        program_name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        active:
          type: boolean
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
          readOnly: true
        lessons_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        education_term:
          allOf:
          - $ref: '#/components/schemas/EducationTerm'
          readOnly: true
        education_term_id:
          type: integer
          writeOnly: true
      required:
      - duration
      - education_term
      - education_term_id
      - id
      - lessons
      - lessons_ids
      - program_name
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
        access:
          type: string
          readOnly: true
        refresh:
          type: string
          readOnly: true
        user:
          type: string
          readOnly: true
      required:
      - access
      - email
      - password
      - refresh
      - user
    Meet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        meet_name:
          type: string
          maxLength: 255
        meet_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 255
        participants:
          type: array
          items:
            type: integer
      required:
      - id
      - meet_date
      - meet_name
      - participants
    PaginatedAttendanceList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Attendance'
    PaginatedEducationTermList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/EducationTerm'
    PaginatedGradeList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Grade'
    PaginatedLessonList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
    PaginatedLessonProgramList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/LessonProgram'
    PaginatedStudentInfoList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=4
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?page=2
        results:
          type: array
          items:
            $ref: '#/components/schemas/StudentInfo'
    PatchedAttendance:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        date:
          type: string
          format: date
        status:
          $ref: '#/components/schemas/StatusEnum'
    PatchedChangePassword:
      type: object
      properties:
        old_password:
          type: string
          writeOnly: true
        new_password:
          type: string
          writeOnly: true
    PatchedEducationTerm:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 255
        start_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
    PatchedEnrollment:
      type: object
      properties:
        student:
          type: integer
        student_id:
          type: integer
          writeOnly: true
        lesson:
          type: integer
        lesson_id:
          type: integer
          writeOnly: true
        date_enrolled:
          type: string
          format: date-time
          readOnly: true
        education_term:
          type: integer
          nullable: true
        education_term_id:
          type: integer
          writeOnly: true
    PatchedGrade:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        student:
          type: integer
        subject:
          type: string
          maxLength: 255
        score:
          type: string
          format: decimal
          pattern: ^-?\d{0,3}(?:\.\d{0,2})?$
    PatchedLesson:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        instructor:
          type: integer
          nullable: true
        education_term:
          allOf:
          - $ref: '#/components/schemas/EducationTerm'
          readOnly: true
        education_term_id:
          type: integer
          writeOnly: true
        enrollments:
          type: array
          items:
            $ref: '#/components/schemas/Enrollment'
          readOnly: true
    PatchedLessonProgram:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        program_name:
          type: string
          maxLength: 255
        description:
          type: string
          nullable: true
        duration:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
        start_date:
          type: string
          format: date
          nullable: true
        end_date:
          type: string
          format: date
          nullable: true
        active:
          type: boolean
        lessons:
          type: array
          items:
            $ref: '#/components/schemas/Lesson'
          readOnly: true
        lessons_ids:
          type: array
          items:
            type: integer
            writeOnly: true
          writeOnly: true
        education_term:
          allOf:
          - $ref: '#/components/schemas/EducationTerm'
          readOnly: true
        education_term_id:
          type: integer
          writeOnly: true
    PatchedMeet:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        meet_name:
          type: string
          maxLength: 255
        meet_date:
          type: string
          format: date
        description:
          type: string
          nullable: true
        location:
          type: string
          nullable: true
          maxLength: 255
        participants:
          type: array
          items:
            type: integer
    PatchedStudentInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        grade:
          type: string
          maxLength: 10
        gpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        user_id:
          type: integer
          readOnly: true
        advisorTeacher:
          type: integer
          nullable: true
    PatchedUpdateProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          pattern: ^\(\d{3}\) \d{3}-\d{4}$
          maxLength: 14
        address:
          type: string
          nullable: true
          maxLength: 100
        zip_code:
          type: string
          nullable: true
          maxLength: 10
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Kullanıcının e-posta adresi
          maxLength: 254
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          pattern: ^\(\d{3}\) \d{3}-\d{4}$
          maxLength: 14
        address:
          type: string
          nullable: true
          maxLength: 100
        zip_code:
          type: string
          nullable: true
          maxLength: 10
        user_role:
          type: integer
    Register:
      type: object
      properties:
        email:
          type: string
          format: email
          title: Email address
          description: Kullanıcının e-posta adresi
          maxLength: 254
        password:
          type: string
          writeOnly: true
          maxLength: 128
        confirm_password:
          type: string
          writeOnly: true
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        user_role_detail:
          allOf:
          - $ref: '#/components/schemas/UserRole'
          readOnly: true
      required:
      - confirm_password
      - email
      - password
      - user_role_detail
    RoleEnum:
      enum:
      - admin
      - teacher
      - student
      - manager
      - assistant_manager
      type: string
      description: |-
        * `admin` - Admin
        * `teacher` - Teacher
        * `student` - Student
        * `manager` - Manager
        * `assistant_manager` - Assistant Manager
    StatusEnum:
      enum:
      - present
      - absent
      type: string
      description: |-
        * `present` - Present
        * `absent` - Absent
    StudentInfo:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        grade:
          type: string
          maxLength: 10
        gpa:
          type: string
          format: decimal
          pattern: ^-?\d{0,2}(?:\.\d{0,2})?$
          nullable: true
        user_id:
          type: integer
          readOnly: true
        advisorTeacher:
          type: integer
          nullable: true
      required:
      - email
      - first_name
      - grade
      - id
      - last_name
      - phone_number
      - user_id
    UpdateProfile:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          pattern: ^\(\d{3}\) \d{3}-\d{4}$
          maxLength: 14
        address:
          type: string
          nullable: true
          maxLength: 100
        zip_code:
          type: string
          nullable: true
          maxLength: 10
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          title: Email address
          description: Kullanıcının e-posta adresi
          maxLength: 254
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        phone_number:
          type: string
          nullable: true
          pattern: ^\(\d{3}\) \d{3}-\d{4}$
          maxLength: 14
        address:
          type: string
          nullable: true
          maxLength: 100
        zip_code:
          type: string
          nullable: true
          maxLength: 10
        user_role:
          type: integer
      required:
      - email
      - id
      - user_role
    UserFilter:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
    UserRole:
      type: object
      properties:
        role:
          $ref: '#/components/schemas/RoleEnum'
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
